proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;
proxy_cache_path /var/cache/nginx-cache keys_zone=cache:10m levels=1:2 inactive=600s max_size=100m;

upstream web {
  server web:3000;
}

upstream api {
  keepalive 20;
  server api:8000;
}

# server {
#  listen 80 default_server;
#  listen [::]:80 default_server;
#  server_name tsukuyomi.me;
#  return 301 https://$host$request_uri;
#}

server {
  listen 80 default_server;
  listen [::]:80 default_server;
  
  server_name tsukuyomi.me;
  server_tokens off;

  # Path for SSL config/key/certificate
  ssl_certificate /etc/ssl/certs/nginx/tsukuyomi-cloudfare.crt;
  ssl_certificate_key /etc/ssl/certs/nginx/tsukuyomi-cloudfare.key;
  include /etc/nginx/includes/ssl.conf;

  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/css application/javascript image/svg+xml;

  brotli_comp_level 6;
  brotli_types application/javascript application/json application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml;

  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_cache_bypass $http_upgrade;

  proxy_cache cache;
  proxy_cache_valid 200 1s;

  location /api {
    proxy_pass http://api;
  }

  location /_next/static {
    proxy_cache STATIC;
    proxy_pass http://web;

    # For testing cache - remove before deploying to production
    # add_header X-Cache-Status $upstream_cache_status;
  }

  location /public {
    proxy_cache STATIC;
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid 60m;
    proxy_pass http://web;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

  location ~* \.(css|js|jpg|jpeg|png) {
    add_header Cache-Control public;
    add_header Pragma public;
    add_header Vary Accept-Encoding;
    expires 2M;
  }

  location / {
    proxy_pass http://web;
  }
}

server {
  listen 443 ssl default_server;
  listen [::]:443 ssl default_server;
  
  server_name tsukuyomi.me;
  server_tokens off;

  # Path for SSL config/key/certificate
  ssl_certificate /etc/ssl/certs/nginx/tsukuyomi.crt;
  ssl_certificate_key /etc/ssl/certs/nginx/tsukuyomi.key;
  include /etc/nginx/includes/ssl.conf;

  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/css application/javascript image/svg+xml;

  brotli_comp_level 6;
  brotli_types application/javascript application/json application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml;

  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_cache_bypass $http_upgrade;

  location /api {
    proxy_cache cache;
    proxy_cache_lock on;
    proxy_cache_valid 200 1s;
    proxy_cache_use_stale updating;
    proxy_pass http://api;
  }

  location /_next/static {
    proxy_cache STATIC;
    proxy_pass http://web;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

  location /public {
    proxy_cache STATIC;
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid 60m;
    proxy_pass http://web;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

  location / {
    proxy_pass http://web;
  }
}